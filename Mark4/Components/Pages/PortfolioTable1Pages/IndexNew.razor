@page "/portfoliotable1sNew"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Mark3.Data.Tables
@using Mark4.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Mark4.Data.ApplicationDbContext> DbFactory
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@rendermode InteractiveServer

@attribute [Authorize]

<PageTitle>Portfolio</PageTitle>

<h2>Portfolio</h2>

<p>
    <a <input type="search" @bind="GridFilter" @bind:event="oninput"/> </a>
    <a href="portfoliotable1s/create">Create New</a>
</p>

<!-- <QuickGrid Class="table" Items="context.PortfolioTable1" Pagination="state"> -->
<QuickGrid Class="table" Items="FilteredGrid" Pagination="state">
    <!-- <PropertyColumn Property="portfoliotable1 => portfoliotable1.UserId" Title="User" /> -->
    <PropertyColumn Property="portfoliotable1 => portfoliotable1.ApplicationUser.UserName" Title="User" />
    <!-- <PropertyColumn Property="portfoliotable1 => portfoliotable1.InstrumentId" Title="Instrument" InitialSortDirection="SortDirection.Ascending" IsDefaultSortColumn="true" Sortable="true" /> -->
    <PropertyColumn Property="portfoliotable1 => portfoliotable1.InstrumentTable1.InSymbolName" Title="Instrument" Sortable="true" />
    <PropertyColumn Property="portfoliotable1 => portfoliotable1.AveragePrice" />
    <PropertyColumn Property="portfoliotable1 => portfoliotable1.Quantity" />
    <PropertyColumn Property="portfoliotable1 => portfoliotable1.NewQuantity" InitialSortDirection="SortDirection.Ascending" IsDefaultSortColumn="true" Sortable="true" />
    <!-- <PropertyColumn Property="portfoliotable1 => portfoliotable1.ModifiedDateTime" Title="Date Modified" Format="dd/MM/yyyy" /> -->
    <!-- <PropertyColumn Property="portfoliotable1 => portfoliotable1.CreatedDate" /> -->

    <TemplateColumn Context="portfoliotable1">
        <a href="@($"portfoliotable1s/edit?id={portfoliotable1.Id}")">Edit</a> |
        <!-- <a href="@($"portfoliotable1s/details?id={portfoliotable1.Id}")">Details</a> | -->
        <a href="@($"portfoliotable1s/delete?id={portfoliotable1.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>
<Paginator State="state" />

@code {
    PaginationState state = new PaginationState { ItemsPerPage = 32 };
    //learn.microsoft.com/en-us/aspnet/core/blazor/components/quickgrid?view=aspnetcore-8.0&tabs=visual-studio
    private string GridFilter = string.Empty;
    private string? userName = string.Empty;
    private ApplicationDbContext context = default!;

    protected override async void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        //youtu.be/w8imy7LT9zY
        AuthenticationState authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        //if (SignInManager.IsSignedIn(authstate.User))
        //string? userName = LoginUserService.GetLoginUserAsync(authstate);
        userName = authstate.User.Identity.Name;
    }
    private IQueryable<PortfolioTable1> FilteredGrid => context.PortfolioTable1.Where(m => m.ApplicationUser.Email.Equals(userName) 
                && m.InstrumentTable1.InSymbolDescription!.Contains(GridFilter))
                .Include(m => m.InstrumentTable1)
                .Include(m => m.ApplicationUser);

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}